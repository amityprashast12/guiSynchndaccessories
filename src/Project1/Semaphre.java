/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Project1;
import java.util.*;
import java.util.concurrent.*;
import java.util.*;
import java.util.concurrent.locks.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.io.*;
    
/**
 *
 * @author h
 */
public class Semaphre extends javax.swing.JFrame {

    /**
     * Creates new form Semaphre
     */
    
     static int chair=5;
    //static Scanner s1;
    static String name;
    static int n1,p1; 
    static Barber b;
    static Customer cu;
    static Semaphore cust,barb,achair;
    static Phil [] pi=new Phil[5]; 
    
    
    static Map hp;
   static Scanner s1,s2=new Scanner(System.in);
   static Scanner s3;
   static Lock write,rlock;
   static int r; 
    static int p,c,n,a,i,brk,read1;
static Semaphore semp,semc,sem;
    public Semaphre() {
        
        super("Prashast's Semaphore Technique");
        initComponents();
        setVisible(true);
        setLocation(320,40);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTabbedPane1.setBackground(new java.awt.Color(204, 0, 204));

        jPanel1.setBackground(new java.awt.Color(51, 204, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 0));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel1.setText("Enter the Number of Producer:-");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setText("Enter the number of Consumers:-");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel3.setText("Enter the Number of Products to be made:-");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("Process");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1)
                            .addComponent(jTextField2)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField3))
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(173, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("ProducerConsumer Problem", jPanel1);

        jPanel2.setBackground(new java.awt.Color(142, 64, 165));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel5.setText("Enter data :-");

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jButton2.setText("Process");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(190, 190, 190)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 37, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jButton2)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("ReaderWriter Problem", jPanel2);

        jPanel3.setBackground(new java.awt.Color(204, 0, 204));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel4.setText("Enter number of customer(At interval of 2 Seconds):-");

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("SleepingBarber Problem", jPanel3);

        jPanel4.setBackground(new java.awt.Color(51, 255, 102));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project1/download.jpg"))); // NOI18N

        jTextField7.setAutoscrolls(false);
        jTextField7.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        jButton3.setText("Start");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel8.setText("Einstein");

        jLabel9.setText("Djikstra");

        jLabel10.setText("Aristotle");

        jLabel11.setText("Harsha");

        jLabel12.setText("Newton");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(201, 201, 201)
                .addComponent(jButton3)
                .addGap(0, 276, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField11)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(45, 45, 45)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel11)
                                .addGap(5, 5, 5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addGap(19, 19, 19)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField8)
                    .addComponent(jTextField9, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Dinning Philosper Problem", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
String s1,s2,s3;
s1=jTextField1.getText();
s2=jTextField2.getText();
s3=jTextField3.getText();
p=Integer.parseInt(s1);
c=Integer.parseInt(s2);
n=Integer.parseInt(s3);
        
        
        
        BlockingQueue<Integer> food = new ArrayBlockingQueue<Integer>(n,true);
 sem= new Semaphore(1);
Consumer con=new Consumer(c,n,food);
Producer prod=new Producer(p,n,food);
semp= new Semaphore(p);
semc= new Semaphore(0);
for(int i=0;i<p;i++)
{
new Thread(prod).start();
}
for(int i=0;i<c;i++)
{
new Thread(con).start();
}
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ReentrantReadWriteLock readWriteLock = 
     new ReentrantReadWriteLock();
    s1=new Scanner(System.in);
    HashMap<String, String> hp=new HashMap<String, String>();
    // HashMap<String, String> dictionary = new HashMap<String, String>();
  //System.out.println("Enter number of elements to be inserted");
   //String st=jTextField4.getText();
   //n=Integer.parseInt(st);

  rlock=readWriteLock.readLock(); 
 
  write = readWriteLock.writeLock();
  Writer w1=new Writer(hp,n);
  Read r1=new Read(hp,rlock,n);
 
  //jTextArea2.append("write files to map\n");
// try{
   //  write.lock();
     

//for(int i=0;i<2;i++)
//{
try
{
System.out.println("stopd`");
new Thread(r1,"reader 1").start();
//new Thread(w1,"Writer").start();
Thread.sleep(400);
}
catch(Exception e){
}
//} 

    new Thread(w1,"writer 2").start();
     new Thread(r1,"reader 2").start();
     new Thread(r1,"reader 3").start();
 new Thread(w1,"Writer 3").start();
new Thread(r1,"reader 4").start();
new Thread(r1,"reader 5").start();
//}
// finally
 /*{
     //System.out.println("unlocking writer ");
     write.unlock();
 }*/
  //jTextArea2.append("read files from map \n");
// for(int j=0;j<r;j++)
//{
     /*while(read1<n){
         System.out.println("stopd");
     if(brk==1)
     {new Thread(r1,"reader 1").start();
 //   new Thread(w1,"writer 2").start();
     new Thread(r1,"reader 2").start();
     new Thread(r1,"reader 3").start();
// new Thread(w1,"Writer 3").start();
new Thread(r1,"reader 4").start();
//}}br
brk=0;
     }
     else if(brk==2){
         break;}
     else{
     try{
Thread.sleep(2100);}
catch(Exception e)
{}
     }
     }
     
 /*catch(Exception e)
 {
     System.out.println("unlocking read");
 }*/
 
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
        String sbcp=jTextField4.getText();
     n1=Integer.parseInt(sbcp);
    cust=new Semaphore(0);
    barb=new Semaphore(0);
    achair=new Semaphore(1);
    b = new Barber(name);
    cu = new Customer();
                   new Thread(b,"Barber").start();
        try {
            Thread.sleep(3000);
        } catch (InterruptedException ex) {
            //Logger.getLogger(Bcp.class.getName()).log(Level.SEVERE, null, ex);
        System.out.println("hi");
        }
    for(int i=0;i<n1;i++)
    {
    new Thread(cu,"Customer"+i).start();
        try {
        Thread.sleep(2000);
        } catch (InterruptedException ex) {
           System.out.println(ex);
        }
     
    };
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         for(int i=0;i<5;i++)
        {
           pi[i]=new Phil(i);
           new Thread(pi[i],"Philospher"+" -"+(i+1)).start();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Semaphre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Semaphre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Semaphre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Semaphre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Semaphre().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
 class Producer implements Runnable
{
//static int i=0;
int p;
int n;
BlockingQueue<Integer>  food;
Producer(int p,int n,BlockingQueue<Integer> food)
{this.p=p;
this.n=n;
this.food=food;
}

@Override
public void run()
{
while(i<n)
{


try{
sem.acquire();
//System.out.println("acquiring 1st");
semp.acquire();
//System.out.println("test1");
}
catch(Exception e)
{System.out.println(e);
}
Random random = new Random();

synchronized(this){
try{
//System.out.println("testadd");

if(i<n){
food.add(i);
jTextArea1.append(Thread.currentThread()+"putting food "+(i+1)+"  in queue\n");
i++;}
else{
semp.release();
sem.release();}
Thread.sleep(random.nextInt(5000));

//System.out.println(food.remainingCapacity());

}
catch(Exception e)
{
System.out.println(e);
}
semc.release();
}
//System.out.println("smc realsd"+semc.availablePermits());
if(a<n)
{}
else
{
//semp.release();
//System.out.println("m i here?"+semp.availablePermits()+Thread.currentThread()+"" +Thread.activeCount());
//semp.release(p);
}

}


}
}


 class Consumer implements Runnable
{
int j;
int c;
int n;
BlockingQueue<Integer>  food;
Consumer(int c,int n,BlockingQueue<Integer> food)
{this.c=c;
this.n=n;
this.food=food;
}
public void run()
{


while(a<n)
{
try
{
//System.out.println("testc");
semc.acquire();
//System.out.println("testc1");
}
catch(Exception e)
{
System.out.println("hic");
}

synchronized(this)
{
try{
//System.out.println("test i m stuck hhere");
if(a<n)
{
j=food.take();
a++;
jTextArea1.append(Thread.currentThread()+"taking food       "+(j+1)+"    from queue\n");
//System.out.println(food.remainingCapacity());
}
else{
semc.release();
}
}
catch(Exception e)
{
System.out.println("hi");
}}
//System.out.println("rree");
semp.release();
//System.out.println("p released"+semp.availablePermits());
sem.release();
//System.out.println("sem releasd");
}
}
}
 class Read implements Runnable
    {
        Map hp;
        Lock rlock;
        int n;
        Read(Map hp,Lock rlock,int n)
        {
            this.hp=hp;
            this.rlock=rlock;
            this.n=n;
        }
    
        public void run() //throws IOException
        {
            try{
              rlock.lock();
            
            
                 //Set set = hp.keySet();
                 //Iterator it=set.iterator();
              System.out.print("here");
              FileInputStream fin=new FileInputStream("C:\\Users\\h\\Documents\\NetBeansProjects\\Project\\src\\Project1\\lalu.txt");
   int i=0;
   System.out.print("here12");
    //while((i=fin.read())!=-1)
//{
System.out.print("entered");

//}
 //                while(it.hasNext())
   //              {
                  
  //                    String key=(String)it.next();
    //                 String value=(String)hp.get(key);
byte br[]=new byte[fin.available()];
fin.read(br);
fin.close();
String data=new String(br);
                    jTextArea2.append(Thread.currentThread()+"REading "+data);//" "+"Name:-"+key+" "+"Address:-"+value+"\n");
                
  
try{
    System.out.print("sleepng");
Thread.sleep(5100);
jTextArea2.append("unlocking"+Thread.currentThread()+"\n");
                rlock.unlock();}
catch(Exception e)
{}
                 //}
                  
        }
            catch(Exception e){
            System.out.print(e);
            }
            finally{
                
            }
    }
    }
      class Writer implements Runnable
    {
        Map hp;
        int n;
        Writer(Map hp,int n)
        {
            this.hp=hp;
           this.n=n;
        }
        public void run()
        {
            try{
     write.lock();
     //for(int i=0;i<n;i++){
  //   {new Thread(w1,"Writer").start();
 
            //System.out.println("Enter 5 names");
           // for(int i=0;i<n;i++)
            //{
                //System.out.println("Enter name");
                //s3=new Scanner(System.in);
                
               // System.out.println("Enter address");
                 // s3=new Scanner(System.in);
         //System.out.println("stopd22");
         String str=jTextField5.getText();
                
                //String str2=jTextField6.getText();
                //if(!(str.equals(""))&&!(str2.equals("")))
       try{        // System.out.println("stopd3");
FileOutputStream fos=new FileOutputStream(new  File("C:\\Users\\h\\Documents\\NetBeansProjects\\Project\\src\\Project1\\lalu.txt"),true);
//String s1="hhi i am prashast Sahay from india ";
byte ch1[]=str.getBytes();
for(int i=0;i<ch1.length;i++)
fos.write(ch1[i]);
fos.flush();
System.out.println("file create");
       }
       catch(Exception e){
       System.out.print(e);
       }jTextField5.setText("");
       
                //jTextField6.setText("");
                //System.out.println("stopd4");
               // hp.put(str,str2);
                //read1++;
                brk=1;
try{
 //jTextArea2.append(Thread.currentThread()+"putting"+" " +"Name:-"+str+" "+"Address:-"+" "+str2+"\n");
             Thread.sleep(2000);
      }
catch(Exception e)
{}
                
                
            }
            
            
          finally{
                   jTextArea2.append("unlocking writer \n");
     write.unlock();
                  }  
            
        }
      }
void haircut()
    {
        try {
             jTextArea3.append("barber cutting hairs\n");
            Thread.sleep(6500);
        } catch (InterruptedException ex) {
           System.out.println(ex);
        }
    }

      class Barber implements Runnable {
        String name;
        Barber(String name){
        this.name=name;
    }
        
        public void run()
        {
            while(true){
       if(p1<n1){         try {
                
             jTextArea3.append("Barber waiting for customer so sleeps\n");
                cust.acquire();
                achair.acquire();
            } catch (InterruptedException ex) {
              System.out.println(ex);
              

            }
            
            chair++;
      try
                   {Thread.sleep(5000);
                }
                   catch(Exception e)
                   {
                      System.out.println(e); //01144444121
                   }
          barb.release();
            achair.release();
p1++;       }
     else{
 jTextArea3.append(Thread.currentThread()+"come out\n");
break;}
            
            }
        }
     }
     class Customer implements Runnable{
         public void run()
        {
          
           
//               try{
               
           while(true){
// try{achair.acquire();}
//catch(Exception e){}
               if(chair>0)
                {
                    chair--;
                jTextArea3.append("chair occupied"+"\n");
                    cust.release();
              //      achair.release();
                   try{
                       barb.acquire();
                   }

                   catch(Exception e){
                       System.out.println(e);
                   }
                   jTextArea3.append(Thread.currentThread()+"having haircut\n");
               break;
                }
                else{
                //achair.release();
                    jTextArea3.append(Thread.currentThread()+"goes customer no seat\n");
                    break;
                }
            
            
            
      }
      }
     }



class Phil implements Runnable
    {
        
        int id;
        int count=1;
        Phil(int i)
        {
            this.id=i;
        }
        @Override
        public void run()
        {
while(true){
       if((pi[id].count==1)&&(pi[((id+1)%5)].count==1))
       {
      
            pi[id].count--;
           pi[((id+1)%5)].count--;
       
if(Thread.currentThread().getName().equals("Philospher -1"))
{jTextField7.setText("Started eating");}
else if(Thread.currentThread().getName().equals("Philospher -2"))
{jTextField8.setText("Started eating");}
else if(Thread.currentThread().getName().equals("Philospher -3"))
{jTextField9.setText("Started eating");}
else if(Thread.currentThread().getName().equals("Philospher -4"))
{jTextField10.setText("Started eating");}
else 
{jTextField11.setText("Started eating");}
try{
Thread.sleep(3500);
}
catch(Exception e)
{
}
if(Thread.currentThread().getName().equals("Philospher -1"))
{jTextField7.setText("Stopped eating");}
else if(Thread.currentThread().getName().equals("Philospher -2"))
{jTextField8.setText("Stopped eating");}
else if(Thread.currentThread().getName().equals("Philospher -3"))
{jTextField9.setText("Stopped eating");}
else if(Thread.currentThread().getName().equals("Philospher -4"))
{jTextField10.setText("Stopped eating");}
else 
{jTextField11.setText("Stopped eating");}

//System.out.println("Stoped eating"+Thread.currentThread());
                 pi[id].count++;
           pi[((id+1)%5)].count++;
   //c.release();    
try{
Thread.sleep(1500);
}
catch(Exception e)
{
}

 }
        
   else
{//System.out.println("Thinking"+Thread.currentThread().getName());
if(Thread.currentThread().getName().equals("Philospher -1"))
{jTextField7.setText("Thinking ");}
else if(Thread.currentThread().getName().equals("Philospher -2"))
{jTextField8.setText("Thinking");}
else if(Thread.currentThread().getName().equals("Philospher -3"))
{jTextField9.setText("Thinking");}
else if(Thread.currentThread().getName().equals("Philospher -4"))
{jTextField10.setText("Thinking");}
else 
{jTextField11.setText("thinking");}



try{
Thread.sleep(1800);
}
catch(Exception e)
{
}
}         
  }          
        }
        
    }



}


    

